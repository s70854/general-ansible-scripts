---
- template: 
    src: templates/{{blueprint.location}}/blueprint.json.j2
    dest: /root/blueprint.json
    mode: 0755
  tags:
  - printOnly     
- template: 
    src: templates/{{blueprint.location}}/template.json.j2
    dest: /root/template.json
    mode: 0755
  tags:
  - printOnly     
- template: 
    src: "templates/{{item}}"
    dest: "/root/{{item}}.json"
    mode: 0755
  loop:
    - hdf_baseurl.json.j2
    - repo.json.j2
    - version_def.json.j2
  tags:
  - printOnly     
- name: Download ambari.repo on agent nodes
  get_url:
    url: "{{release.ambari.url}}"
    dest: /etc/yum.repos.d/ambari.repo
    force: yes
  delegate_to: "{{item}}"
  delegate_facts: True
  loop: "{{groups['gateway']|union(groups['agent'])}}"     
- name: Install ambari agents
  yum: name="ambari-agent" state=latest update_cache=yes
  delegate_to: "{{item}}"
  delegate_facts: True
  loop: "{{groups['gateway']|union(groups['agent'])}}"
  when: ansible_facts['os_family'] == "RedHat"    
- name: register ambari-agents  
  replace:
    path: /etc/ambari-agent/conf/ambari-agent.ini
    regexp: 'hostname=localhost'
    replace: "hostname={{hostvars[groups['gateway'][0]].ansible_fqdn}}"
    backup: yes
  delegate_to: "{{item}}"
  delegate_facts: True
  loop: "{{groups['gateway']|union(groups['agent'])}}"
- name: start the ambari-agents
  command: ambari-agent restart    
  delegate_to: "{{item}}"
  delegate_facts: True
  loop: "{{groups['gateway']|union(groups['agent'])}}"  

- name: VDF registration
  uri:
    url: "http://{{groups['gateway'][0]}}:8080/api/v1/version_definitions"
    method: POST
    headers:
      X-Requested-By: ambari
    user: admin
    password: admin
    body_format: raw
    body: "{{ lookup('template','templates/version_def.json.j2') | to_json }}" 
    force_basic_auth: yes
    status_code: 201  
  tags:
  - registerVdf      
  
- name: Register the stack version - HDP
  uri:
    url: "http://{{groups['gateway'][0]}}:8080/api/v1/stacks/HDP/versions/{{release.hdp.version|regex_replace('^([0-9]\\.[0-9]).*$','\\1')}}/operating_systems/{{cluster.os}}/repositories/HDP-{{release.hdp.version|regex_replace('^([0-9]\\.[0-9]).*$','\\1')}}"
    method: PUT
    headers:
      X-Requested-By: ambari
    user: admin
    password: admin
    body_format: raw
    body: "{{ lookup('template','templates/repo.json.j2') | to_json }}" 
    force_basic_auth: yes
    status_code: 200,201  
  when: not release.publicrepos and not release.hdf.purge
  tags:
  - registgerStackVersion  

- name: Register the stack version - HDF
  uri:
    url: "http://{{groups['gateway'][0]}}:8080/api/v1/stacks/HDF/versions/{{release.hdf.version|regex_replace('^([0-9]\\.[0-9]).*$','\\1')}}/operating_systems/{{cluster.os}}/repositories/HDF-{{release.hdf.version|regex_replace('^([0-9]\\.[0-9]).*$','\\1')}}"
    method: PUT
    headers:
      X-Requested-By: ambari
    user: admin
    password: admin
    body_format: raw
    body: "{{ lookup('template','templates/repo.json.j2') | to_json }}" 
    force_basic_auth: yes
    status_code: 200,201  
  when: not release.publicrepos and release.hdf.purge
  tags:
  - registgerStackVersion  


- name: Update the repositories for HDF baseurl
  uri:
    url: "http://{{groups['gateway'][0]}}:8080/api/v1/stacks/HDP/versions/{{release.hdp.version|regex_replace('^([0-9]\\.[0-9]).*$','\\1')}}/repository_versions/1"
    method: PUT
    headers:
      X-Requested-By: ambari
    user: admin
    password: admin
    body_format: raw
    body: "{{ lookup('template','templates/hdf_baseurl.json.j2') | to_json }}" 
    force_basic_auth: yes
    status_code: 200,201  
  when: release.hdf.install  and not release.hdf.purge
  tags:
  - updateBaseUrl  

# verify the VDF registration using GET: http://172.27.11.192:8080/api/v1/stacks/HDP/versions/3.1/repository_versions/1?fields=operating_systems/repositories/Repositories&minimal_response=true

# wait for 30 sec
- name: sleep for 30s and continue with play
  wait_for: timeout=30
  delegate_to: localhost

- name: register the blueprint
  uri:
    url: "http://{{groups['gateway'][0]}}:8080/api/v1/blueprints/{{cluster.name}}?validate_topology=false"
    method: POST
    headers:
      X-Requested-By: ambari
    user: admin
    password: admin
    body_format: raw
    body: "{{ lookup('template','templates/' + blueprint.location + '/blueprint.json.j2') | to_json }}" 
    force_basic_auth: yes
    status_code: 201  
  tags:
  - registerBp     

# wait for 10 sec
- name: sleep for 30s and continue with play
  wait_for: timeout=10
  delegate_to: localhost

- name: deploy the blueprint
  uri:
    url: "http://{{groups['gateway'][0]}}:8080/api/v1/clusters/{{cluster.name}}"
    method: POST
    headers:
      X-Requested-By: ambari
    user: admin
    password: admin
    body_format: raw
    body: "{{ lookup('template','templates/' + blueprint.location + '/template.json.j2') | to_json }}" 
    force_basic_auth: yes
    status_code: 202,201  
  tags:
  - deploy    
  
...
