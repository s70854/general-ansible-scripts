{
    "Blueprints": {
        "blueprint_name": "{{cluster.name}}", 
        "stack_name": "HDP", 
        "stack_version": "3.1"
    }, 
    "configurations": [
        {
            "mapred-site": {
                "properties": {
                    "mapreduce.am.max-attempts": "20"
                }
            }
        }, 
        {
            "ranger-yarn-plugin-properties": {
                "properties": {
                    "REPOSITORY_CONFIG_USERNAME": "yarn", 
                    "common.name.for.certificate": "-", 
                    "policy_user": "ambari-qa", 
                    "ranger-yarn-plugin-enabled": "Yes"
                }
            }
        }, 
        {
            "ranger-admin-site": {
                "properties": {
                    "ranger.audit.source.type": "solr", 
                    "ranger.jpa.jdbc.driver": "com.mysql.jdbc.Driver", 
                    "ranger.jpa.jdbc.url": "jdbc:{{database.dbflavour}}://{{hostvars[groups['db'][0]].ansible_fqdn}}/ranger" 
                }
            }
        }, 
        {
            "ranger-env": {
                "properties": {
                    "admin_password": "Rangerpassword@123", 
                    "is_external_solrCloud_enabled": "false", 
                    "is_external_solrCloud_kerberos": "false", 
                    "is_solrCloud_enabled": "false", 
                    "keyadmin_user_password": "Rangerpassword@123", 
                    "ranger-atlas-plugin-enabled": "Yes", 
                    "ranger-hbase-plugin-enabled": "Yes", 
                    "ranger-hdfs-plugin-enabled": "Yes", 
                    "ranger-hive-plugin-enabled": "Yes", 
                    "ranger-kafka-plugin-enabled": "Yes", 
                    "ranger-knox-plugin-enabled": "Yes", 
                    "ranger-storm-plugin-enabled": "Yes", 
                    "ranger-yarn-plugin-enabled": "Yes", 
                    "ranger_admin_password": "Rangerpassword@123", 
                    "ranger_privelege_user_jdbc_url": "jdbc:{{database.dbflavour}}://{{hostvars[groups['db'][0]].ansible_fqdn}}:3306",
                    "create_db_dbuser": "Yes",
                    "rangertagsync_user_password": "Rangerpassword@123", 
                    "rangerusersync_user_password": "Rangerpassword@123", 
                    "xasecure.audit.destination.solr": "false"
                }
            }
        }, 
	    {
            "ams-hbase-site": {
                "properties": {
                    "hbase.rootdir": "file:///grid/0/lib/ambari-metrics-collector/hbase", 
                    "hbase.tmp.dir": "/grid/0/lib/ambari-metrics-collector/hbase-tmp"
                }
            }
        },
        {
            "kerberos-env": {
                "properties": {
                    "admin_server_host": "{{hostvars[groups['kdc'][0]].ansible_fqdn}}", 
                    "encryption_types": "aes des3-cbc-sha1 rc4 des-cbc-md5", 
                    "kdc_hosts": "{{hostvars[groups['kdc'][0]].ansible_fqdn}}", 
                    "kdc_type": "mit-kdc", 
                    "realm": "{{kerberos.realm}}", 
                    "service_check_principal_name": "cl1-7D6HQ1NTHV"
                }
            }

        }, 
        {
            "ams-grafana-env": {
                "properties": {
                    "metrics_grafana_password": "admin"
                }
            }
        }, 


        {
            "hbase-site": {
                "properties": {
                    "hbase.master.info.port": "30010", 
                    "hbase.master.port": "20000", 
                    "hbase.regionserver.info.port": "20030", 
                    "hbase.rootdir": "hdfs://mycluster/apps/hbase/data"
                }
            }
        }, 	
 
        {
            "ranger-hdfs-plugin-properties": {
                "properties": {
                    "REPOSITORY_CONFIG_USERNAME": "hadoop", 
                    "common.name.for.certificate": "-", 
                    "policy_user": "ambari-qa", 
                    "ranger-hdfs-plugin-enabled": "Yes"
                }
            }
        }, 
        {
            "admin-properties": {
                "properties": {
                    "DB_FLAVOR": "MYSQL", 
                    "SQL_CONNECTOR_JAR": "/usr/share/java/mysql-connector-java.jar", 
                    "audit_db_name": "ranger_audit", 
                    "audit_db_password": "rangerlogger", 
                    "audit_db_user": "rangerlogger", 
                    "db_host": "{{hostvars[groups['db'][0]].ansible_fqdn}}", 
                    "db_name": "ranger", 
                    "db_password": "{{database.users.ranger.pswd}}", 
                    "db_root_password": "{{database.dba.pswd}}", 
                    "db_root_user": "{{database.dba.name}}", 
                    "db_user": "{{database.users.ranger.name}}", 
                    "policymgr_external_url": "http://%HOSTGROUP::host_group_master%:6080"
                }
            }
        }, 
        {
            "hdfs-site": {
                "properties": {
                    "dfs.client.https.need-auth": "false", 
                    "dfs.datanode.data.dir": "/grid/0/hadoop/hdfs/data", 
                    "dfs.datanode.https.address": "0.0.0.0:50475", 
                    "dfs.disk.balancer.enabled": "true", 
                    "dfs.encrypt.data.transfer": "true", 
                    "dfs.encrypt.data.transfer.algorithm": "3des", 
                    "dfs.http.policy": "HTTP_ONLY", 
                    "dfs.https.enable": "true", 
                    "dfs.journalnode.edits.dir": "/hadoop/hdfs/journal", 
                    "dfs.namenode.checkpoint.dir": "/hadoop/hdfs/namesecondary", 
                    "dfs.namenode.http-address": "%HOSTGROUP::host_group_master%:20070", 
                    "dfs.namenode.https-address": "%HOSTGROUP::host_group_master%:50470", 
                    "dfs.namenode.inode.attributes.provider.class": "org.apache.ranger.authorization.hadoop.RangerHdfsAuthorizer", 
                    "dfs.namenode.name.dir": "/hadoop/hdfs/namenode", 
                    "dfs.namenode.secondary.http-address": "0.0.0.0:50090", 
                    "dfs.namenode.secondary.https-address": "0.0.0.0:50091", 
                    "dfs.support.append": "true"
                }
            }
        }, 
        {
            "ams-env": {
                "properties": {
                    "metrics_collector_log_dir": "/grid/0/log/metric_collector", 
                    "metrics_monitor_log_dir": "/grid/0/log/metric_monitor"
                }
            }
        }, 
        {
            "ams-site": {
                "properties": {
                    "timeline.metrics.hbase.init.check.enabled": "false",  
                    "timeline.metrics.service.rpc.address": "0.0.0.0:20200"
                }
            }
        }, 
        {
            "knox-env": {
                "properties": {
                    "knox_master_secret": "knoxsecret"
                }
            }
        }, 
        {
            "mapred-env": {
                "properties": {
                    "mapred_log_dir_prefix": "/grid/0/log/hadoop-mapreduce", 
                    "mapreduce_log_dir_prefix": "/grid/0/log/hadoop-mapreduce"
                }
            }
        }, 

        {
            "core-site": {
                "properties": {
                    "fs.azure.account.key.hwxasvtesting.blob.core.windows.net": "R/1hsiE/qdHPZU9yfrSPlOcJ7AvPAtdsaNyRxaWC++NkU8jxHNC1m6ZsuOpRqyodiP/Fnn29NrI+/zZ4nEJN6A==", 
                    "ha.zookeeper.quorum": "%HOSTGROUP::host_group_slave%:2181",
                    "hadoop.proxyuser.falcon.groups": "*", 
                    "hadoop.proxyuser.falcon.hosts": "*", 
                    "hadoop.proxyuser.hcat.groups": "*", 
                    "hadoop.proxyuser.hdfs.groups": "*", 
                    "hadoop.proxyuser.hdfs.hosts": "*", 
                    "hadoop.proxyuser.hive.groups": "*", 
                    "hadoop.proxyuser.hive.hosts": "*", 
                    "hadoop.proxyuser.oozie.groups": "*", 
                    "hadoop.proxyuser.oozie.hosts": "*", 
                    "hadoop.rpc.protection": "privacy", 
                    "io.compression.codec.lzo.class": "com.hadoop.compression.lzo.LzoCodec", 
                    "io.compression.codecs": "org.apache.hadoop.io.compress.GzipCodec,org.apache.hadoop.io.compress.DefaultCodec,org.apache.hadoop.io.compress.SnappyCodec,com.hadoop.compression.lzo.LzoCodec,com.hadoop.compression.lzo.LzopCodec", 
                    "proxyuser_group": "users"
                }
            }
        }, 
        {
            "krb5-conf": {
                "properties": {
                    "domains": "hwx.site,.hwx.site", 
                    "manage_krb5_conf": "true"
                }
            }
        }, 
        {
            "yarn-hbase-site": {
                "properties": {
                    "hbase.master.hfilecleaner.ttl": "604800000", 
                    "hbase.master.logcleaner.ttl": "604800000", 
                    "hbase.master.namespace.init.timeout": "86400000"
                }
            }
        }, 
        {
            "yarn-hbase-env": {
                "properties": {
                    "yarn_hbase_log_level": "DEBUG"
                }
            }
        }, 
 
        {
            "hadoop-env": {
                "properties": {
                    "hdfs_log_dir_prefix": "/grid/0/log/hdfs", 
                    "namenode_heapsize": "1500"
                }
            }
        }, 
        {
            "yarn-site": {
                "properties": {
                    "yarn.authorization-provider": "org.apache.ranger.authorization.yarn.authorizer.RangerYarnAuthorizer", 
                    "yarn.http.policy": "HTTP_ONLY", 
                    "yarn.log.server.url": "http://%HOSTGROUP::host_group_master%:19888/jobhistory/logs", 
                    "yarn.log.server.web-service.url": "http://%HOSTGROUP::host_group_master%:8190/ws/v1/applicationhistory", 
                    "yarn.nodemanager.address": "0.0.0.0:25454", 
                    "yarn.nodemanager.delete.debug-delay-sec": "3600", 
                    "yarn.nodemanager.local-dirs": "/grid/0/hadoop/yarn/local", 
                    "yarn.nodemanager.log-dirs": "/grid/0/hadoop/yarn/log", 
                    "yarn.nodemanager.resourcemanager.connect.max-wait.ms": "3600000", 
                    "yarn.nodemanager.webapp.https.address": "0.0.0.0:54321", 
                    "yarn.resourcemanager.webapp.https.address": "%HOSTGROUP::host_group_master%:8090", 
                    "yarn.timeline-service.enabled": "true", 
                    "yarn.timeline-service.leveldb-state-store.path": "/grid/0/hadoop/yarn/timeline", 
                    "yarn.timeline-service.leveldb-timeline-store.path": "/grid/0/hadoop/yarn/timeline", 
                    "yarn.timeline-service.webapp.https.address": "%HOSTGROUP::host_group_master%:8190"
                }
            }
        }, 
        {
            "yarn-env": {
                "properties": {
                    "yarn_log_dir_prefix": "/grid/0/log/yarn"
                }
            }
        }, 
        {
            "capacity-scheduler": {
                "properties": {
                    "yarn.scheduler.capacity.maximum-am-resource-percent": "0.4", 
                    "yarn.scheduler.capacity.root.acl_submit_applications": "hive,zeppelin,hbase,ambari-qa users"
                }
            }
        }, 
	    {
            "ranger-hbase-plugin-properties": {
                "properties": {
                    "ranger-hbase-plugin-enabled": "Yes"
                }
            }
        }, 
	    {   
            {% raw %}
            "hbase-env": {
                "properties": {
                    "content": "# Set environment variables here.\n\n# The java implementation to use. Java 1.6 required.\nexport JAVA_HOME={{java64_home}}\n\n# HBase Configuration directory\nexport HBASE_CONF_DIR=${HBASE_CONF_DIR:-{{hbase_conf_dir}}}\n\n# Extra Java CLASSPATH elements. Optional.\nexport HBASE_CLASSPATH=${HBASE_CLASSPATH}\n\n\n# The maximum amount of heap to use, in MB. Default is 1000.\n# export HBASE_HEAPSIZE=1000\n\n# Extra Java runtime options.\n# Below are what we set by default. May only work with SUN JVM.\n# For more on why as well as other possible settings,\n# see http://wiki.apache.org/hadoop/PerformanceTuning\nexport SERVER_GC_OPTS=\"-verbose:gc -XX:+PrintGCDetails -XX:+PrintGCDateStamps -Xloggc:{{log_dir}}/gc.log-`date +'%Y%m%d%H%M'`\"\n# Uncomment below to enable java garbage collection logging.\n# export HBASE_OPTS=\"$HBASE_OPTS -verbose:gc -XX:+PrintGCDetails -XX:+PrintGCDateStamps -Xloggc:$HBASE_HOME/logs/gc-hbase.log\"\n\n# Uncomment and adjust to enable JMX exporting\n# See jmxremote.password and jmxremote.access in $JRE_HOME/lib/management to configure remote password access.\n# More details at: http://java.sun.com/javase/6/docs/technotes/guides/management/agent.html\n#\n# export HBASE_JMX_BASE=\"-Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote.authenticate=false\"\n# If you want to configure BucketCache, specify '-XX: MaxDirectMemorySize=' with proper direct memory size\n# export HBASE_THRIFT_OPTS=\"$HBASE_JMX_BASE -Dcom.sun.management.jmxremote.port=10103\"\n# export HBASE_ZOOKEEPER_OPTS=\"$HBASE_JMX_BASE -Dcom.sun.management.jmxremote.port=10104\"\n\n# File naming hosts on which HRegionServers will run. $HBASE_HOME/conf/regionservers by default.\nexport HBASE_REGIONSERVERS=${HBASE_CONF_DIR}/regionservers\n\n# Extra ssh options. Empty by default.\n# export HBASE_SSH_OPTS=\"-o ConnectTimeout=1 -o SendEnv=HBASE_CONF_DIR\"\n\n# Where log files are stored. $HBASE_HOME/logs by default.\nexport HBASE_LOG_DIR={{log_dir}}\n\n# A string representing this instance of hbase. $USER by default.\n# export HBASE_IDENT_STRING=$USER\n\n# The scheduling priority for daemon processes. See 'man nice'.\n# export HBASE_NICENESS=10\n\n# The directory where pid files are stored. /tmp by default.\nexport HBASE_PID_DIR={{pid_dir}}\n\n# Seconds to sleep between slave commands. Unset by default. This\n# can be useful in large clusters, where, e.g., slave rsyncs can\n# otherwise arrive faster than the master can service them.\n# export HBASE_SLAVE_SLEEP=0.1\n\n# Tell HBase whether it should manage it's own instance of Zookeeper or not.\nexport HBASE_MANAGES_ZK=false\n\n{% if java_version < 8 %}\nJDK_DEPENDED_OPTS=\"-XX:PermSize=128m -XX:MaxPermSize=128m\"\n{% endif %}\n\n{% if security_enabled %}\nexport HBASE_OPTS=\"$HBASE_OPTS -XX:+UseG1GC -XX:MaxGCPauseMillis=100 -XX:-ResizePLAB -XX:ErrorFile={{log_dir}}/hs_err_pid%p.log -Djava.security.auth.login.config={{client_jaas_config_file}} -Djava.io.tmpdir={{java_io_tmpdir}}\"\nexport HBASE_MASTER_OPTS=\"$HBASE_MASTER_OPTS -Xmx{{master_heapsize}} -Djava.security.auth.login.config={{master_jaas_config_file}} -Djavax.security.auth.useSubjectCredsOnly=false $JDK_DEPENDED_OPTS\"\nexport HBASE_REGIONSERVER_OPTS=\"$HBASE_REGIONSERVER_OPTS -XX:ReservedCodeCacheSize=256m -Xms{{regionserver_heapsize}} -Xmx{{regionserver_heapsize}} -Djava.security.auth.login.config={{regionserver_jaas_config_file}} -Djavax.security.auth.useSubjectCredsOnly=false $JDK_DEPENDED_OPTS\"\nexport PHOENIX_QUERYSERVER_OPTS=\"$PHOENIX_QUERYSERVER_OPTS -Djava.security.auth.login.config={{queryserver_jaas_config_file}}\"\n{% else %}\nexport HBASE_OPTS=\"$HBASE_OPTS -XX:+UseG1GC -XX:MaxGCPauseMillis=100 -XX:-ResizePLAB -XX:ErrorFile={{log_dir}}/hs_err_pid%p.log -Djava.io.tmpdir={{java_io_tmpdir}}\"\nexport HBASE_MASTER_OPTS=\"$HBASE_MASTER_OPTS -Xmx{{master_heapsize}} $JDK_DEPENDED_OPTS\"\nexport HBASE_REGIONSERVER_OPTS=\"$HBASE_REGIONSERVER_OPTS -XX:ReservedCodeCacheSize=256m -Xms{{regionserver_heapsize}} -Xmx{{regionserver_heapsize}} $JDK_DEPENDED_OPTS\"\n{% endif %}\n\n# HBase off-heap MaxDirectMemorySize\nexport HBASE_REGIONSERVER_OPTS=\"$HBASE_REGIONSERVER_OPTS {% if hbase_max_direct_memory_size %} -XX:MaxDirectMemorySize={{hbase_max_direct_memory_size}}m {% endif %}\"\nexport HBASE_MASTER_OPTS=\"$HBASE_MASTER_OPTS {% if hbase_max_direct_memory_size %} -XX:MaxDirectMemorySize={{hbase_max_direct_memory_size}}m {% endif %}\"", 
                    "hbase_java_io_tmpdir": "/grid/0/hbase-tmp", 
                    "hbase_log_dir": "/grid/0/log/hbase"
                }
            }
            {% endraw %}
        },


        {
            "zoo.cfg": {
                "properties": {
                    "dataDir": "/grid/0/hadoop/zookeeper", 
                    "secureClientPort": "2281", 
                    "tickTime": "4500"
                }
            }
        }, 
        {
            "zookeeper-env": {
                "properties": {
                    "zk_log_dir": "/grid/0/log/zookeeper"
                }
            }
        }, 
        {
            "cluster-env": {
                "properties": {
                    "command_retry_max_time_in_sec": "1800", 
                    "commands_to_retry": "START", 
                    "sysprep_skip_create_users_and_groups": "false"
                }
            }
        },
        {
          "storm-site": {
            "properties": {
              "nimbus.authorizer": "org.apache.ranger.authorization.storm.authorizer.RangerStormAuthorizer",
              "topology.max.spout.pending": "100000",
              "storm.zookeeper.session.timeout": "90000"
            }
          }
        },
        {
          "storm-env": {
            "properties": {
              "storm_log_dir": "/grid/0/log/storm",
              "jmxremote_port": "26431"
            }
          }
        },
        {
          "logsearch-properties": {
            "properties": {
              "logsearch.logfeeder.include.default.level": "FATAL,ERROR,WARN,INFO,DEBUG,TRACE,UNKNOWN"
            }
          }
        },
        {
          "logsearch-env": {
            "properties": {
              "logsearch_log_dir": "/grid/0/log/ambari-logsearch-portal"
            }
          }
        },
        {
          "logsearch-admin-json": {
            "properties": {
              "logsearch_admin_username": "ambari_logsearch_admin",
              "logsearch_admin_password": "admin"
            }
          }
        },
        {
          "logfeeder-env": {
            "properties": {
              "logfeeder_log_dir": "/grid/0/log/ambari-logsearch-logfeeder"
            }
          }
        },
        {
            "kafka-broker": {
                "properties": {
                    "authorizer.class.name": "org.apache.ranger.authorization.kafka.authorizer.RangerKafkaAuthorizer",
                    "log.dirs": "/grid/0/kafka-logs",
                    "zookeeper.connection.timeout.ms": "360000",
                    "listeners": "SASL_PLAINTEXT://localhost:6668,PLAINTEXT://localhost:6669",
                    "security.inter.broker.protocol": "SASL_PLAINTEXT"

                }
            }
        },
        {
            "kafka-env": {
                "properties": {
                    "kafka_log_dir": "/grid/0/log/kafka"
                }
            }
        }       
    ], 
    "host_groups": [
        {
            "cardinality": "1", 
            "components": [
                {
                    "name": "LOGSEARCH_LOGFEEDER", 
                    "provision_action": "INSTALL_AND_START"
                }, 
                {
                    "name": "LOGSEARCH_SERVER", 
                    "provision_action": "INSTALL_AND_START"
                },
                {
                    "name": "NIMBUS"
                }, 
                {
                    "name": "DRPC_SERVER"
                }, 
                {
                    "name": "SUPERVISOR"
                }, 
                {
                    "name": "STORM_UI_SERVER"
                }, 
                {
                    "name": "NAMENODE"
                }, 
                {
                    "name": "DATANODE"
                }, 
                {
                    "name": "HISTORYSERVER"
                }, 
                {
                    "name": "YARN_REGISTRY_DNS"
                }, 
                {
                    "name": "RESOURCEMANAGER"
                }, 
                {
                    "name": "TIMELINE_READER", 
                    "provision_action": "INSTALL_AND_START"
                }, 
                {
                    "name": "APP_TIMELINE_SERVER"
                }, 
                {
                    "name": "ZOOKEEPER_CLIENT"
                }, 

                {
                    "name": "INFRA_SOLR_CLIENT", 
                    "provision_action": "INSTALL_AND_START"
                }, 
                {
                    "name": "INFRA_SOLR", 
                    "provision_action": "INSTALL_AND_START"
                }, 
                {
                    "name": "METRICS_GRAFANA", 
                    "provision_action": "INSTALL_AND_START"
                }, 
                {
                    "name": "METRICS_COLLECTOR", 
                    "provision_action": "INSTALL_AND_START"
                }, 
                {
                    "name": "METRICS_MONITOR", 
                    "provision_action": "INSTALL_AND_START"
                }, 
 

                {
                    "name": "HBASE_MASTER", 
                    "provision_action": "INSTALL_AND_START"
                }, 
                {
                    "name": "HBASE_REGIONSERVER", 
                    "provision_action": "INSTALL_AND_START"
                }, 
                {
                    "name": "RANGER_TAGSYNC", 
                    "provision_action": "INSTALL_AND_START"
                }, 
                {
                    "name": "RANGER_ADMIN", 
                    "provision_action": "INSTALL_AND_START"
                }, 
                {
                    "name": "RANGER_USERSYNC", 
                    "provision_action": "INSTALL_AND_START"
                }

 
            ], 
            "name": "host_group_master"
        }, 
        {
            "cardinality": "1", 
            "components": [
	            {
                    "name": "LOGSEARCH_LOGFEEDER", 
                    "provision_action": "INSTALL_AND_START"
                },
                {
                    "name": "SECONDARY_NAMENODE"
                }, 
                {
                    "name": "SUPERVISOR"
                },                  
                {
                    "name": "DATANODE"
                }, 
                {
                    "name": "HDFS_CLIENT"
                }, 
                {
                    "name": "MAPREDUCE2_CLIENT"
                }, 
                {
                    "name": "YARN_CLIENT"
                }, 
                {
                    "name": "ZOOKEEPER_CLIENT"
                }, 
                {
                    "name": "INFRA_SOLR_CLIENT", 
                    "provision_action": "INSTALL_AND_START"
                }, 
                {
                    "name": "METRICS_MONITOR", 
                    "provision_action": "INSTALL_AND_START"
                }, 
	            {
                    "name": "HBASE_CLIENT", 
                    "provision_action": "INSTALL_AND_START"
                },
		        {
                    "name": "HBASE_REGIONSERVER", 
                    "provision_action": "INSTALL_AND_START"
                },
                {
                    "name": "KAFKA_BROKER"
                }, 
 
                {
                    "name": "KERBEROS_CLIENT"
                }
            ], 
            "name": "host_group_gateway"
        }, 
        {
            "cardinality": "1", 
            "components": [
                {
                    "name": "LOGSEARCH_LOGFEEDER", 
                    "provision_action": "INSTALL_AND_START"
                }, 
                {
                    "name": "SUPERVISOR"
                },            
                {
                    "name": "DATANODE"
                }, 
                {
                    "name": "NODEMANAGER"
                }, 
                {
                    "name": "ZOOKEEPER_SERVER"
                }, 
                {
                    "name": "ZOOKEEPER_CLIENT"
                }, 
                {
                    "name": "METRICS_MONITOR", 
                    "provision_action": "INSTALL_AND_START"
                }, 
                {
                    "name": "HBASE_REGIONSERVER", 
                    "provision_action": "INSTALL_AND_START"
                }, 
                {
                    "name": "KAFKA_BROKER"
                }
            ], 
            "name": "host_group_slave"
        }
    ]
}